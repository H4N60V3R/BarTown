// <auto-generated />
using System;
using BarTown.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BarTown.Migrations
{
    [DbContext(typeof(BarTownContext))]
    [Migration("20200728150038_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BarTown.Models.Entities.TblConfig", b =>
                {
                    b.Property<int>("PkConfig")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkConfig")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConfigDesc1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ConfigDesc2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int?>("FkPosition")
                        .HasColumnName("fkPosition")
                        .HasColumnType("int");

                    b.HasKey("PkConfig");

                    b.ToTable("tblConfig");
                });

            modelBuilder.Entity("BarTown.Models.Entities.TblLocation", b =>
                {
                    b.Property<int>("PkLocation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkLocation")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkLocationType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fkLocationType")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("FkTehranRegion")
                        .HasColumnName("fkTehranRegion")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PkLocation");

                    b.HasIndex("LocationName")
                        .IsUnique()
                        .HasName("IX_tblLocation");

                    b.ToTable("tblLocation");
                });

            modelBuilder.Entity("BarTown.Models.Entities.TblShippingCost", b =>
                {
                    b.Property<int>("PkShippingCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkShippingCost")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkDestinationLocation")
                        .HasColumnName("fkDestinationLocation")
                        .HasColumnType("int");

                    b.Property<int>("FkOriginLocation")
                        .HasColumnName("fkOriginLocation")
                        .HasColumnType("int");

                    b.Property<int>("FkTruckType")
                        .HasColumnName("fkTruckType")
                        .HasColumnType("int");

                    b.Property<int>("ShippingCost")
                        .HasColumnType("int");

                    b.Property<string>("ShippingCostDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("PkShippingCost");

                    b.ToTable("tblShippingCost");
                });

            modelBuilder.Entity("BarTown.Models.Entities.TblTruckService", b =>
                {
                    b.Property<int>("PkTruckService")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pkTruckService")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FkTruckType")
                        .HasColumnName("fkTruckType")
                        .HasColumnType("int");

                    b.Property<int>("LoadingTime")
                        .HasColumnType("int");

                    b.Property<int>("OverLoadCost")
                        .HasColumnType("int");

                    b.Property<string>("TruckServiceDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("UnLoadingTime")
                        .HasColumnType("int");

                    b.HasKey("PkTruckService");

                    b.ToTable("tblTruckService");
                });

            modelBuilder.Entity("BarTown.Models.Entities.TblTruckType", b =>
                {
                    b.Property<int>("PkTruckType")
                        .HasColumnName("pkTruckType")
                        .HasColumnType("int");

                    b.Property<string>("TruckTypeDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("TruckTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("PkTruckType");

                    b.ToTable("tblTruckType");
                });
#pragma warning restore 612, 618
        }
    }
}
